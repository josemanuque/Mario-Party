/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Miscellaneous;

import Server.Client;
import java.io.IOException;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.NoSuchElementException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author jmque
 */
public class StartAdivinar extends javax.swing.JFrame {
    int randomNumber;
    LinkedList<Integer> list = new LinkedList<>();
    Client cliente;
    int localPlayerNumber;
    int totalPlayers;
    String nick;
    int currentPlayer = 1;
    
    /**
     * Creates new form StartAdivinar
     */
    public StartAdivinar() {
        initComponents();
//        randomNumber = new Random().nextInt(1000) + 1;
//        System.out.println(randomNumber);
//        guess();
    }

    public void setRandomNumber(int randomNumber) {
        this.randomNumber = randomNumber;
    }

    public void setCliente(Client cliente) {
        this.cliente = cliente;
    }

    public void setLocalPlayerNumber(int localPlayerNumber) {
        this.localPlayerNumber = localPlayerNumber;
        
        if(localPlayerNumber == currentPlayer) {
            guess();
        }
    }

    public void setTotalPlayers(int totalPlayers) {
        this.totalPlayers = totalPlayers;
    }

    public void setNick(String nick) {
        this.nick = nick;
    }

    
    
    public boolean isNumeric(String str) { 
        try {  
          int i = Integer.parseInt(str);
          if(i < 0 || 1 > 1000) {
              return false;
          }
          return true;
        } catch(NumberFormatException e){  
          return false;  
        }  
      }
    public void guess(){
        try {
            String str = "";
            
            str = "";
            while (!(isNumeric(str))){
                str = JOptionPane.showInputDialog("Escriba un número entre 1 y 1000");
            }
            int number = Integer.parseInt(str);
        
//        System.out.println(number);

          cliente.salida.writeInt(14);
          cliente.salida.writeInt(number);
        } catch (IOException ex) {
            Logger.getLogger(StartAdivinar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void recibirResultado(int resultado) {
        list.add(resultado);
        revisarTurno();
    }
    
    public void revisarTurno() {
        currentPlayer++;
        if(this.localPlayerNumber == currentPlayer) {
            guess();
        }
        
        if(currentPlayer > totalPlayers) {
            for(int i = 0;i < list.size(); i++) {
                txaRank.append("Jugador " + (i + 1) + " eligió: " + list.get(i) + "\n");
            }
            int c = list.stream().min(Comparator.comparingInt(i -> Math.abs(i - randomNumber)))
            .orElseThrow(() -> new NoSuchElementException("No value present"));
            txaRank.append("El número era: " + randomNumber + "\n");
            txaRank.append("Ganó el jugador " + (list.indexOf(c)+1));
            JOptionPane.showMessageDialog(this, "El jugador " + (list.indexOf(c) + 1) + " ganó el sorteo");
            if(localPlayerNumber !=1)
                return;
            try {
                cliente.salida.writeInt(5);
                cliente.salida.writeInt(1);
            } catch (IOException ex) {
                Logger.getLogger(StartAdivinar.class.getName()).log(Level.SEVERE, null, ex);
            }
            int size = list.size();
            for(int i = 0; i < size; i++) {
                try {
                    c = list.stream().min(Comparator.comparingInt(j -> Math.abs(j - randomNumber)))
                            .orElseThrow(() -> new NoSuchElementException("No value present"));
                    System.out.println("C = " + c);
                    list.remove(list.indexOf(c));
                    cliente.salida.writeInt(c);
                    
                } catch (IOException ex) {
                    Logger.getLogger(StartAdivinar.class.getName()).log(Level.SEVERE, null, ex);
                }
                

            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaRank = new javax.swing.JTextArea();
        jSlider1 = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblTitle.setText("Start");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Guess the number");

        txaRank.setColumns(20);
        txaRank.setRows(5);
        jScrollPane1.setViewportView(txaRank);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 184, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(171, 171, 171)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartAdivinar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartAdivinar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartAdivinar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartAdivinar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartAdivinar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txaRank;
    // End of variables declaration//GEN-END:variables
}
